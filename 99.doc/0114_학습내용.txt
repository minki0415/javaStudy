[학습내용]

Log4j

1. 기능 
	사용자들의 흔적을 기록하기 위한 솔루션
	
2. 제공처
	- apache 재단(비영리 IT 솔루션 제공 재단)
	- https://logging.apache.org/
	
3. 사용자 
	a. 개발자 
	b. log4j 다운로드
	c. 제시된 API를 호출하면서 적절한 시점에 활용
	
4. 기록 레벨
	trace < debug < info < warn < error
		- properties 파일에 info했을 경우 인식된 레벨 : info < warn < error
		- properties 파일에 debug했을 경우 인식된 레벨 : debug < info < warn < error
	
	
	a. 디테일 정보 섬세하게 기록(trace)
		- 모든 흐름 추적에 대한 상세 기록
	b. 디버깅 레벨(debug)
		- 개발 시 필요한 소소한 정보 다 기록
	c. 정보알림(info)
		- 개발 후에 관리자들이 실행에 대한 흐름 및  user에 대한 에러가 아닌 정보 기록
	d. 경고(warn)
		- 에러는 아니지만 거슬리는 경미한 메시지
	e. 에러(error)
		- 실행시 발생하는 심각한 에러상황에 대한 기록
		
5. 개발 방법
	a. log4j 다운로드
	b. log4j 설정 파일 개발
		- log4j.properties 파일 필수
			1) key = value 구조로 저장
		- 어떤 내용을 어디에 기록할 것인가에 대한 정보 설정
	c. 개발하는 소스에서 사용
	
6. log4j properties
	# Set root category priority to INFO and its only appender to CONSOLE.
	log4j.rootCategory=info, CONSOLE, daily
	
	# CONSOLE is set to be a ConsoleAppender using a PatternLayout.
	log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
	log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
	log4j.appender.CONSOLE.layout.ConversionPattern=%d %5p (%F:%L) - %m%n
	
	log4j.appender.daily=org.apache.log4j.DailyRollingFileAppender
	log4j.appender.daily.File=C:\\20220103_lab\\88.log\\playdata.log
	log4j.appender.daily.DatePattern='.'yyyy-MM-dd
	log4j.appender.daily.layout=org.apache.log4j.PatternLayout
	log4j.appender.daily.layout.ConversionPattern=%d %5p (%F:%L) - %m%n
	#log4j.appender.daily.layout.ConversionPattern=- %F %m%n
	
7. log4j.properties 부연설명 

	# Set root category priority to INFO and its only appender to CONSOLE.
		- 단순주석(properties 파일의 주석)
	
	log4j.rootCategory=info, CONSOLE, daily
		- info : info 레벨을 의미
		- CONSOLE : 로그기록 출력 위치, 실행되는 콘솔 창
		- daily : 백업용으로 저장하고자 하는 파일로 지정하기 위한 설정
	
	# CONSOLE is set to be a ConsoleAppender using a PatternLayout.
	log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
		-log4jappender.CONSOLE : 로그기록 추가하면서 출력하는 콘솔 지정
		- org.apache.log4j.ConsoleAppender : 콘솔에 출력해주는 기능의 API 지정
			- 개발자는 설정
			- log4j가 설정 정보 read 후에 객체 생성 후 기능 수행하게 세팅
			
	log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
		- 어떤 포맷으로 출력할 것인지에 대한 기능 수행 API
		- 향후 설정하는 형식에 맞게 출력 기능 수행 
		
	log4j.appender.CONSOLE.layout.ConversionPattern=%d %5p (%F:%L) - %m%n
		- 실제 출력하는 형식
		- %d %5p (%F:%L) - %m%n
		- 날짜 모든 레벨 다 기록 의미
			- (%F:%L) - %m%n
			- %F : 기록되는 파일
			- %L : 실행되는 소스 line
			-  - : 개발자들이 가변적으로 설정 가능한 표현식	
			- %m : 실행되는 메소드의 메시지 값 출력(실제 기록하고자 하는 내용)
			- %n : new line
	
	log4j.appender.daily=org.apache.log4j.DailyRollingFileAppender
		- 매일매일 file로 기록하겠다는 의미
	log4j.appender.daily.File=C:\\20220103_lab\\88.log\\playdata.log
		- 파일 생성 위치 및 파일명
	log4j.appender.daily.DatePattern='.'yyyy-MM-dd
		- 매일매일 파일이 기록 가능하게 생성되는 파일들의 구분자로 파일명 날짜 추가
	log4j.appender.daily.layout=org.apache.log4j.PatternLayout
	log4j.appender.daily.layout.ConversionPattern=%d %5p (%F:%L) - %m%n
	#log4j.appender.daily.layout.ConversionPattern=- %F %m%n
	
	